# Kruskal算法
# 1.先把图中的所有边提取出来, 存放在一个array中
# 2.把array中的边按照距离从小到大进行排序
# 3.把排序好的边依次放回图中:
#       a.如果形成环则此边不被选中, 撤销放入, 进入下一个筛选
#       b.如果没有形成环则此边被选中, 放入并进入下一个筛选
# 4.如果所有顶点都被连接则完成


# Prim算法
# 1.把图中的顶点分为两个集合, 已选集合, 未选集合
# 2.每次从已选集合到未选集合之间选取距离最短的边, 并将该边连接的处于未选集合的顶点划入已选集合
# 3.直到所有顶点都处于已选集合则完成
# -------------------实现思路--------------------------
# 维护4个array: node, selected, minDist, parent:
# node   =   [0, 1, 2, 3, 4, 5, 6, 7, 8]    顶点
# selected = [F, F, F, F, F, F, F, F, F]    顶点是否被选中
# minDist  = [inf,inf,inf,inf,inf,inf,inf,inf,inf]    某一时刻已选顶点集合到达这个顶点所有边中权值最小(距离最小)的权值大小
# parent   = [-1,-1,-1,-1,-1,-1,-1,-1,-1]     最小权值边另一端顶点